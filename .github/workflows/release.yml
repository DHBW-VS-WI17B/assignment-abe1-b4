name: release

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-documentation:
    name: Build documentation pdf file
    runs-on: ubuntu-18.04
    container:
      image: skyfrk/udhbwvst:5.3.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Display versions of build tools
        run: |
          latexmk -v
          lualatex --version
          java -jar $PLANTUML_JAR -version
      - name: Build
        run: |
          latexmk \
          -pdf \
          -file-line-error \
          -interaction=nonstopmode \
          -cd \
          -pdflatex=lualatex \
          -synctex=1 \
          -shell-escape \
          src/documentation/root.tex
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: src/documentation/root.pdf
  build-server:
    name: Build server on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup dotnet v3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Install dependencies
        working-directory: src/app/TicketStore.Server.App
        run: dotnet restore
      - name: Build
        working-directory: src/app/TicketStore.Server.App
        run: dotnet build --no-restore --configuration Release 
      - name: Test
        working-directory: src/app/TicketStore.Server.App
        run: dotnet test --no-restore
      - name: Publish
        working-directory: src/app/TicketStore.Server.App
        run: dotnet publish --no-restore -o build
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: server-${{ matrix.os }}
          path: src/app/TicketStore.Server.App/build/*
  build-client:
    name: Build client on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup dotnet v3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Install dependencies
        working-directory: src/app/TicketStore.Client.App
        run: dotnet restore
      - name: Build
        working-directory: src/app/TicketStore.Client.App
        run: dotnet build --no-restore --configuration Release 
      - name: Test
        working-directory: src/app/TicketStore.Client.App
        run: dotnet test --no-restore
      - name: Publish
        working-directory: src/app/TicketStore.Client.App
        run: dotnet publish --no-restore -o build
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: client-${{ matrix.os }}
          path: src/app/TicketStore.Client.App/build/*
  deploy-github:
    name: Deploy to GitHub Releases
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build-documentation, build-server, build-client ]
    runs-on: ubuntu-18.04
    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Prepare
        run: |
          mkdir staging
          mv artifacts/documentation/root.pdf "staging/WWI17B_Seminararbeit_ABE1_Gruppe_B4-${GITHUB_REF##*/}.pdf"
          mv artifacts/client** staging
          mv artifacts/server** staging
      - name: Deploy
        uses: softprops/action-gh-release@v1
        with:
          files: |
            staging/WWI17B_Seminararbeit_ABE1_Gruppe_B4-*.pdf
            staging/client-*/*
            staging/server-*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy-azure:
    name: Deploy server to Azure
    needs: [ build-server ]
    runs-on: windows-2019
    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: server-windows-2019
          path: package
      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ticketstore-wa
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}
          package: package

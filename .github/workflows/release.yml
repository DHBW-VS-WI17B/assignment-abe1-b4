name: release

on:
  release:
    types: [published]

jobs:
  build-documentation:
    name: build documentation
    runs-on: ubuntu-18.04
    container:
      image: skyfrk/udhbwvst:5.3.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Display versions of build tools
        run: |
          latexmk -v
          lualatex --version
          java -jar $PLANTUML_JAR -version
      - name: Build
        run: |
          latexmk \
          -pdf \
          -file-line-error \
          -interaction=nonstopmode \
          -cd \
          -pdflatex=lualatex \
          -synctex=1 \
          -shell-escape \
          src/documentation/root.tex
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: src/documentation/root.pdf
  build-client:
    name: build client ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-18.04
            target: linux-x64
          - kind: windows
            os: windows-2019
            target: win-x64
          - kind: macOS
            os: macos-10.15
            target: osx-x64
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup dotnet v3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: dotnet publish
        working-directory: src/app/TicketStore.Client.App
        run: dotnet publish -c Release -r "${{ matrix.target }}" -p:PublishSingleFile=true -p:DebugType=None -o build
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: TicketStore.Client-${{ matrix.target }}
          path: src/app/TicketStore.Client.App/build/*
  build-server:
    name: build server ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-18.04
            target: linux-x64
          - kind: windows
            os: windows-2019
            target: win-x64
          - kind: macOS
            os: macos-10.15
            target: osx-x64
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup dotnet v3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: dotnet publish
        working-directory: src/app/TicketStore.Server.App
        run: dotnet publish -c Release -r "${{ matrix.target }}" -p:PublishSingleFile=true -p:DebugType=None -o build
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: TicketStore.Server-${{ matrix.target }}
          path: src/app/TicketStore.Server.App/build/*
  deploy-github:
    name: deploy to github releases
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build-documentation, build-server, build-client ]
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: download
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: prepare
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          mkdir staging
          mv artifacts/documentation/root.pdf "staging/WWI17B_Seminararbeit_ABE1_Gruppe_B4-$tag.pdf"
          mv artifacts/TicketStore.Client-linux-x64/TicketStore.Client.App "staging/TicketStore.Client-$tag_linux-x64"
          mv artifacts/TicketStore.Server-linux-x64/TicketStore.Server.App "staging/TicketStore.Server-$tag_linux-x64"
          mv artifacts/TicketStore.Client-osx-x64/TicketStore.Client.App "staging/TicketStore.Client-$tag_osx-x64"
          mv artifacts/TicketStore.Server-osx-x64/TicketStore.Server.App "staging/TicketStore.Server-$tag_osx-x64"
          mv artifacts/TicketStore.Client-win-x64/TicketStore.Client.App.exe "staging/TicketStore.Client-$tag_win-x64.exe"
          mv artifacts/TicketStore.Server-win-x64/TicketStore.Server.App.exe "staging/TicketStore.Server-$tag_win-x64.exe"
      - name: deploy
        uses: softprops/action-gh-release@v1
        with:
          files: staging/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
